<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 开启 Aspect 生成代理对象 -->
    <aop:aspectj-autoproxy/>

    <!-- 创建切面类（CalculatorLoggingAspect）和被增强类（ArithmeticCalculatorImpl）的对象 -->
    <bean id="arithmeticCalculatorImpl" class="com.com.oneby.calc.ArithmeticCalculatorImpl"/>
    <bean id="calculatorLoggingAspect" class="com.com.oneby.calc.CalculatorLoggingAspect"/>

    <!-- 配置 aop 切入点 -->
    <aop:config>
        <!-- 配置切入点表达式 -->
        <aop:pointcut id="calcPointcut" expression="execution(* com.com.oneby.calc.ArithmeticCalculator.*(..))"/>
        <!-- 配置切面 -->
        <aop:aspect ref="calculatorLoggingAspect">
            <!-- 配置通知的类型，以及具体切哪些方法 -->
            <aop:before method="before" pointcut-ref="calcPointcut"/>
            <aop:after method="after" pointcut-ref="calcPointcut"/>
            <aop:after-returning method="afterReturning" pointcut-ref="calcPointcut"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="calcPointcut"/>
            <aop:around method="around" pointcut-ref="calcPointcut"/>
        </aop:aspect>
    </aop:config>

</beans>